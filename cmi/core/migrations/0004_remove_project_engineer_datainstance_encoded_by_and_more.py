# Generated by Django 5.2.5 on 2025-09-07 06:30

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_datainstance'),
        ('particular', '0008_remove_division_sector_division_project_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='project',
            name='engineer',
        ),
        migrations.AddField(
            model_name='datainstance',
            name='encoded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encoder', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datainstance',
            name='encoded_file',
            field=models.FileField(blank=True, null=True, upload_to=core.models.instance_encoded_file_path),
        ),
        migrations.AddField(
            model_name='datainstance',
            name='raw_file',
            field=models.FileField(blank=True, null=True, upload_to=core.models.instance_raw_file_path),
        ),
        migrations.AddField(
            model_name='datainstance',
            name='review_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datainstance',
            name='review_comments',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='DailyVariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('crew_size', models.PositiveIntegerField()),
                ('crew_composition', models.TextField()),
                ('crew_cooperation', models.CharField(choices=[(1, 'Very Diverse Ability, Very Low Stake Value, Very Large Crew Size'), (2, 'Diverse Ability, Low Stake Value, Large Crew Size'), (3, 'Diverse Ability, Medium Stake Value, Average Crew Size'), (4, 'Similar Ability, High Stake Value, Small Crew Size'), (5, 'Similar Ability, Very High Stake Value, Very Small Crew Size')], max_length=1)),
                ('level_of_interruption', models.PositiveIntegerField()),
                ('fairness_of_work_assignment', models.CharField(choices=[(1, 'Inconsistent daily work, Unreasonable crew assignment, VERY POOR information'), (2, 'Inconsistent daily work, Unreasonable crew assignment, POOR information'), (3, 'Consistent daily work, Reasonable crew assignment, AVERAGE information'), (4, 'Consistent daily work, Reasonable crew assignment, GOOD information'), (5, 'Consistent daily work, Reasonable crew assignment, VERY GOOD information')], max_length=1)),
                ('crew_ability', models.CharField(choices=[(1, 'Below 20%'), (2, 'Between 20% and 40%'), (3, 'Between 40% and 60%'), (4, 'Between 60% and 80%'), (5, 'Above 80%')], max_length=1)),
                ('crew_willingness', models.CharField(choices=[(1, 'Completely Unwilling'), (2, 'Somewhat NOT Willing'), (3, 'Somewhat Willing'), (4, 'Willing'), (5, 'Completely Willing')], max_length=1)),
                ('craftsmen_education', models.CharField(choices=[(1, 'Elementary'), (2, 'Highschool'), (3, 'Technical'), (4, 'College'), (5, 'University')], max_length=1)),
                ('craftsmen_onjob_training', models.PositiveIntegerField()),
                ('craftsmen_technical_training', models.PositiveIntegerField()),
                ('crew_experience', models.DecimalField(decimal_places=2, max_digits=5)),
                ('languages_spoken', models.PositiveIntegerField()),
                ('job_security', models.DecimalField(decimal_places=2, max_digits=5)),
                ('work_equiment_number', models.TextField()),
                ('waiting_time_for_work_equipment', models.DecimalField(decimal_places=2, max_digits=5)),
                ('transport_equipment_number', models.TextField()),
                ('waiting_time_for_transport_equipment', models.DecimalField(decimal_places=2, max_digits=5)),
                ('misplacement_of_tools', models.DecimalField(decimal_places=2, max_digits=5)),
                ('electric_power_availability', models.DecimalField(decimal_places=2, max_digits=5)),
                ('extension_cord_availability', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_precipitation', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_precipitation', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_humidity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_humidity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_wind_speed', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_wind_speed', models.DecimalField(decimal_places=2, max_digits=5)),
                ('site_congestion', models.CharField(max_length=5)),
                ('use_of_overtime', models.DecimalField(decimal_places=2, max_digits=10)),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.collector')),
                ('particular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='particular.particular')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
        ),
        migrations.CreateModel(
            name='MPDM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_unit', models.CharField(max_length=20)),
                ('operation', models.CharField(max_length=255)),
                ('equipment', models.CharField(max_length=255)),
                ('particular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='particular.particular')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
        ),
        migrations.CreateModel(
            name='MPDMCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_number', models.PositiveIntegerField()),
                ('cycle_time', models.PositiveIntegerField()),
                ('environment_delay', models.IntegerField()),
                ('equipment_delay', models.IntegerField()),
                ('labor_delay', models.IntegerField()),
                ('material_delay', models.IntegerField()),
                ('management_delay', models.IntegerField()),
                ('other_delay', models.IntegerField()),
                ('other_label', models.CharField(blank=True, max_length=255, null=True)),
                ('mpdm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.mpdm')),
            ],
        ),
        migrations.CreateModel(
            name='Productivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_count', models.PositiveIntegerField(default=0)),
                ('counted_date', models.DateField(auto_now_add=True)),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('mpdm_delay', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('mpdm_code', models.CharField(blank=True, max_length=100, null=True)),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.collector')),
                ('particular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='particular.particular')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
        ),
    ]
